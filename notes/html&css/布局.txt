布局模型visual formatting：
FC(formatting context)是页面中的一块渲染区域，它有一套渲染规则，决定了其子元素将如何定位以及和其他元素的关系

1.流动模型normal flow，是默认的网页布局模式。也就是说网页在默认状态下的 HTML 网页元素都是根据流动模型来分布网页内容的。

块状元素(block-level，display属性为block,list-item,table)会参与BFC块级格式化上下文，
BFC布局规则为：
1.内部的box都会在所处的包含元素内自上而下按顺序垂直延伸分布，在默认状态下， 块状元素的宽度都为父级的100%
2.box垂直方向上的距离由margin决定，属于同一个BFC的竖直margin会折叠
3.每个块状元素的margin box的左边，与包含块的border box的左边相接触；即使在有浮动的情景下也是如此，除非框创建了一个新的块格式化上下文(在这种情况下该框可能会为了避开浮动框而变窄)。
4.BFC区域不会与float box重叠
5.BFC是页面上的一个独立容器，与外部隔绝
6.计算BFC高度时，浮动元素也参与计算（经常用在拥有浮动元素的父元素上，父元素高度塌陷，可使父元素生成BFC解决）

生成BFC的元素：
1.根元素
2.float不为none，生成float box的元素
3.position:absolute/fixed
4.display:inline-block,table-cell,table-caption,flex,inline-flex
5.overflow不为visible


内联元素(inline-level, display属性为inline,inline-block,inline-table)会参与IFC，都会在所处的包含元素内从左到右水平分布显示。


2.浮动模型，使用float让块状元素并排

3.层模型，使用绝对定位、相对定位、固定定位
定位：
position:fixed 固定某元素位置不随滚动条滚动而滚动,Fixed定位使元素的位置与文档流无关， 与absolute一样脱离文档流，偏移标准为浏览器的可视窗口。
position:relative 相对其正常位置而定位，原来空间大小不变，只是会出现重叠的情况
相对定位元素经常被用来作为绝对定位元素的容器块，仍在标准流中，对其他元素无影响
position:absolute 相对于最近的已定位父元素（必须是已经定位），如果没有父元素则相对于<html>
Absolutely定位使元素的位置与文档流无关，因此不占据空间。设置为绝对定位的元素框从文档流完全删除，并相对于其包含块定位，包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像该元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。
如果两个定位元素重叠，没指定z-index，最后定位在HTML代码中的元素将被显示在最前面。

CSS设置相对其他元素（父级元素）定位，必须符合：
1.参照定位的元素是该元素的父级；2.参照定位的元素必须是已经定位（可加入position:relative）;
3.该元素使用position:absolute;再结合left,top,bottom,right定位

两栏流体布局：
①总宽度固定的情况：
一、固定一栏使用固定宽度，position:absolute,top:0,left:0;父级使用position:relative,另一栏栏使用margin-left，但此法溢出后不可以清除覆盖
二、固定一栏使用固定宽度，float:left，第二栏使用margin-left， 此法溢出后可用clear 清除浮动
针对固定一栏在右侧的顺序问题：
如果固定一栏在右侧，使用float:right方法时必须将固定一栏的元素的HTML写在前面，而margin-right元素写在后面；
为了解决顺序问题，采用如下方法：
在最外层加div，设置样式为width:100%,float:left/right;里面左侧元素设置margin-right; 右侧固定元素设置固定width,float:left,margin:-width

②总宽度不固定（比例）的情况：
一、两侧不固定宽度，可以把各栏宽度改为比例显示，则可以随浏览器大小变化而变化，但此法宽度过大时可能出现裂缝，解决方法是设置min-width,max-width，IE6不支持此两个属性必须通过DOM JavaScript 设置元素的最小宽度、最大宽度；
另一种方法：一侧float,另一侧display:table-cell;(IE8+及其他) display:inline-block;(IE7)，兼容时使用 *display:inline-block(*是CSS hack,针对IE6，7,_针对IE6) 
二、单侧固定宽度，
第一种方法固定一栏使用固定宽度，通过postion:absolute,top,left,另一栏使用margin，但是会出现溢出因为其脱离文档流;
第二种使用改进的浮动法，在不固定的一栏加一个div包裹住此栏，width设置为100%即其父元素的宽度，设置float， margin的值是负值，负值大小是固定一栏的宽度；然后不固定的一栏设置margin正值，大小是固定一栏的宽度，此法可灵活设置宽度不必考虑各列高度，可以在底部设置clear清除浮动


三栏布局：
①总宽度固定：
三栏全部采用固定宽度，float:left，底部清除浮动
②总宽度不固定：
一、全部按比例
二、一列宽度固定，另外两列按比例
第一种情况左列固定或右列固定，必须使用两个wrap外加div包裹住另外两列，innerWrap,outerWrap;
第二种情况中间列固定，同样使用改进浮动法，两边列各加一个wrap
三、两列固定，一列按比例


制作页面流程：
1.内容分析，先研究网页中要展示的内容，分清主次及重要程度；
2.结构设计，搭建合理的HTML结构，保证没有任何CSS的情况下也可以保持可读性
3.原型设计，由设计师负责制作原型图
4.方案设计，确定原型图后有美工设计出真实页面
5.布局设计，使用html+css进行布局
6.视觉设计，使用css配合美工设计元素
7.交互设计，添加交互效果

面对设计图，一般遵循原则: 先考虑设计图中的文字内容和内容模块之间的关系，重点放在编写html结构和语义化，然后考虑布局和表现形式。