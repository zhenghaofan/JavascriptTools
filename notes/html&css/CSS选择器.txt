CSS选择器:
ID选择器、CLASS选择器、属性选择器(使用[]，如：input[type="text"]，[title]所有标题)、分组选择器(拥有同个样式的所有元素归为一组，用逗号分隔)、标签选择器
在现代布局中，id 选择器常常用于建立组合选择器，如 #aaa p{}
p.important{} 表示class属性为important的所有段落

CSS组合选择器：
后代选择器，以空格分隔：div p {} 表示所有后代，包括孙子后代
直接后代选择器，以大于号分隔：div>p {}  表示直接后代
相邻兄弟选择器，二者有相同父元素，选择一元素后的元素，使用加号：div+p {} 表示所有位于div元素后的第一个<p>元素
所有相邻兄弟选择器，选取所有，使用~：div~p {}

属性选择器：
指定属性包含指定值，使用~分隔：[title~=hello]表示标题含hello单词的元素
包含属性的元素样式：[title|=en]表示标题含en（不一定是单词）的元素
以指定值开头的元素：[title^=aaa]

CSS伪类：
语法为：  选择元素：伪类名
在CSS定义中，a:hover 必须被置于 a:link 和 a:visited 之后，才是有效的。
在 CSS 定义中，a:active 必须被置于 a:hover 之后，才是有效的。
伪类的名称不区分大小写。
使用:first-child选择第一个子元素，在IE8的之前版本必须声明<!DOCTYPE> ，这样 :first-child 才能生效，如：p:first-child表示所有元素的第一个<p>子元素
匹配所有<p>元素中的第一个<i>元素：p>i:first-child{}
匹配所有第一个<p>元素中的<i>元素：p:first-child i{}
使用:lang可以为不同语言定义规则，:focus 当前input焦点时触发

CSS伪元素：
:first-line 用于块元素的首行
:first-letter 用于块元素的首字母
:before :after 可以在元素之前、之后插入内容
:first-child,:last-child,:nth-child(even),:nth-child(2n),:not

CSS选择器权值的规则：
标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100，important权重最高。例如下面的代码：
p{color:red;} /*权值为1*/
p span{color:green;} /*权值为1+1=2*/
.warning{color:white;} /*权值为10*/
p span.warning{color:purple;} /*权值为1+1+10=12*/
#footer .note p{color:yellow;} /*权值为100+10+1=111*/
注意：还有一个权值比较特殊--继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低。

优先级：
important > 内联 > ID > 类 > 标签 | 伪类 | 属性选择 > 伪对象 >  通配符 > 继承

重要性和来源的优先级排序是：

无条件优先的属性只需要在属性后面使用 !important 。它会覆盖页面内任何位置定义的元素样式。
第二高位的优先属性是在html中给元素标签加style。
第三级优先的属性是由一个或多个id选择器来定义的。例如 #id{margin:0;} 会覆盖 .classname{margin:3px;}。
第四级的属性由一个或多个 类选择器、属性选择器、伪类选择器定义。如 .classname{margin:3px;} 会覆盖 div{margin:6px;}
第五级由一个或多个 元素选择器定义。如 div{margin:6px;}  覆盖  *{margin:10px;} 。
最低一级的选择器是为一个通配选择器，用*{margin:10px;}这样的类型来定义。

注意样式优先级为：浏览器默认的样式 < 网页制作者样式 < 用户自己设置的样式，但记住!important优先级样式是个例外，权值高于用户自己设置的样式。
//参考
重要性和来源的优先级排序从低到高是：
　　1、浏览器默认样式
　　2、用户在浏览器中定义的普通样式（normal规则，不带important规则）
　　3、开发人员定义的普通样式（ normal规则，不带important规则）
　　4、开发人员定义特殊样式（带important规则）
　　5、用户在浏览器中定义特殊样式（带important规则）

另外还有一些原则：
1、相同的样式在CSS规则后添加了!important的优先于没有添加的。
2、CSS规则在文档中出现的顺序后面定义的的优先于前面定义的。
3、内联样式优先于用link引入的样式和页面上<style>里的样式。